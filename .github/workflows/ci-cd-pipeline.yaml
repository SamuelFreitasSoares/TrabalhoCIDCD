name: CI/CD Pipeline

on:
  push:
    branches:
      - Main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Create Test Reports Directory
        run: mkdir -p test-reports

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Integration Tests
        run: npm run test:integration

      - name: Run Interface Tests
        run: npm run test:interface

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-reports/

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test  # O job de build depende do job de teste
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build/output.txt

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [test, build]  # Este job roda após os jobs de teste e build
    steps:
      - name: Send Notification Email
        run: |
          echo "Pipeline executed successfully!"  # Este é um exemplo, substitua pela lógica real de envio de email
        env:
          EMAIL_ADDRESS: ${{ secrets.NOTIFICATION_EMAIL }}  # O email deve ser armazenado como um segredo

name: CI/CD Pipeline

# O pipeline será executado em push para a branch `main`
on:
  push:
    branches:
      - main

# Definimos três jobs principais: test, build e notify
jobs:
  # Job de testes (unitários, de integração e de interface)
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    # Passos do job
    steps:
      # Baixa o código do repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # Configura o Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Instala as dependências
      - name: Install dependencies
        run: npm install

      # Executa os testes unitários
      - name: Run Unit Tests
        run: npm run test:unit

      # Executa os testes de integração
      - name: Run Integration Tests
        run: npm run test:integration

      # Executa os testes de interface
      - name: Run Interface Tests
        run: npm run test:interface

      # Faz upload dos relatórios de testes como artefatos
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-reports/

  # Job de build (empacotamento)
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test  # O build só será executado se os testes forem bem-sucedidos
    
    steps:
      # Baixa o código do repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # Configura o Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Instala as dependências
      - name: Install dependencies
        run: npm install

      # Executa o script de build
      - name: Build Project
        run: npm run build

      # Faz upload do artefato gerado no build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: build/output.txt  # O caminho do arquivo gerado pelo build

  # Job de notificação por e-mail
  notify:
    name: Notify Pipeline Completion
    needs: [test, build]  # Executa após os jobs de test e build
    runs-on: ubuntu-latest
    
    steps:
      # Envia uma notificação por e-mail
      - name: Send Notification
        env:
          EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}  # O email é definido via Secrets
        run: |
          echo "Pipeline executed successfully!" | mailx -s "CI/CD Pipeline Notification" $EMAIL_RECIPIENT
